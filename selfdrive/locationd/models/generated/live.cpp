#include "live.h"

namespace {
#define DIM 22
#define EDIM 21
#define MEDIM 21
typedef void (*Hfun)(double *, double *, double *);
const static double MAHA_THRESH_4 = 7.814727903251177;
const static double MAHA_THRESH_9 = 7.814727903251177;
const static double MAHA_THRESH_10 = 7.814727903251177;
const static double MAHA_THRESH_12 = 7.814727903251177;
const static double MAHA_THRESH_31 = 7.814727903251177;
const static double MAHA_THRESH_32 = 9.487729036781154;
const static double MAHA_THRESH_13 = 7.814727903251177;
const static double MAHA_THRESH_14 = 7.814727903251177;
const static double MAHA_THRESH_33 = 7.814727903251177;

/******************************************************************************
 *                       Code generated with sympy 1.9                        *
 *                                                                            *
 *              See http://www.sympy.org/ for more information.               *
 *                                                                            *
 *                         This file is part of 'ekf'                         *
 ******************************************************************************/
void H(double *in_vec, double *out_2337975499004216015) {
   out_2337975499004216015[0] = 0;
   out_2337975499004216015[1] = -sin(in_vec[1])*sin(in_vec[2])*in_vec[4] - sin(in_vec[1])*cos(in_vec[2])*in_vec[3] - cos(in_vec[1])*in_vec[5];
   out_2337975499004216015[2] = -sin(in_vec[2])*cos(in_vec[1])*in_vec[3] + cos(in_vec[1])*cos(in_vec[2])*in_vec[4];
   out_2337975499004216015[3] = cos(in_vec[1])*cos(in_vec[2]);
   out_2337975499004216015[4] = sin(in_vec[2])*cos(in_vec[1]);
   out_2337975499004216015[5] = -sin(in_vec[1]);
   out_2337975499004216015[6] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (-sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_2337975499004216015[7] = -sin(in_vec[0])*sin(in_vec[1])*in_vec[5] + sin(in_vec[0])*sin(in_vec[2])*cos(in_vec[1])*in_vec[4] + sin(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_2337975499004216015[8] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[3] + (sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]))*in_vec[4];
   out_2337975499004216015[9] = sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) - sin(in_vec[2])*cos(in_vec[0]);
   out_2337975499004216015[10] = sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) + cos(in_vec[0])*cos(in_vec[2]);
   out_2337975499004216015[11] = sin(in_vec[0])*cos(in_vec[1]);
   out_2337975499004216015[12] = (-sin(in_vec[0])*sin(in_vec[1])*sin(in_vec[2]) - cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (-sin(in_vec[0])*sin(in_vec[1])*cos(in_vec[2]) + sin(in_vec[2])*cos(in_vec[0]))*in_vec[3] - sin(in_vec[0])*cos(in_vec[1])*in_vec[5];
   out_2337975499004216015[13] = -sin(in_vec[1])*cos(in_vec[0])*in_vec[5] + sin(in_vec[2])*cos(in_vec[0])*cos(in_vec[1])*in_vec[4] + cos(in_vec[0])*cos(in_vec[1])*cos(in_vec[2])*in_vec[3];
   out_2337975499004216015[14] = (sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]))*in_vec[4] + (sin(in_vec[0])*cos(in_vec[2]) - sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]))*in_vec[3];
   out_2337975499004216015[15] = sin(in_vec[0])*sin(in_vec[2]) + sin(in_vec[1])*cos(in_vec[0])*cos(in_vec[2]);
   out_2337975499004216015[16] = -sin(in_vec[0])*cos(in_vec[2]) + sin(in_vec[1])*sin(in_vec[2])*cos(in_vec[0]);
   out_2337975499004216015[17] = cos(in_vec[0])*cos(in_vec[1]);
}
void err_fun(double *nom_x, double *delta_x, double *out_7211975948903307689) {
   out_7211975948903307689[0] = delta_x[0] + nom_x[0];
   out_7211975948903307689[1] = delta_x[1] + nom_x[1];
   out_7211975948903307689[2] = delta_x[2] + nom_x[2];
   out_7211975948903307689[3] = -0.5*delta_x[3]*nom_x[4] - 0.5*delta_x[4]*nom_x[5] - 0.5*delta_x[5]*nom_x[6] + 1.0*nom_x[3];
   out_7211975948903307689[4] = 0.5*delta_x[3]*nom_x[3] + 0.5*delta_x[4]*nom_x[6] - 0.5*delta_x[5]*nom_x[5] + 1.0*nom_x[4];
   out_7211975948903307689[5] = -0.5*delta_x[3]*nom_x[6] + 0.5*delta_x[4]*nom_x[3] + 0.5*delta_x[5]*nom_x[4] + 1.0*nom_x[5];
   out_7211975948903307689[6] = 0.5*delta_x[3]*nom_x[5] - 0.5*delta_x[4]*nom_x[4] + 0.5*delta_x[5]*nom_x[3] + 1.0*nom_x[6];
   out_7211975948903307689[7] = delta_x[6] + nom_x[7];
   out_7211975948903307689[8] = delta_x[7] + nom_x[8];
   out_7211975948903307689[9] = delta_x[8] + nom_x[9];
   out_7211975948903307689[10] = delta_x[9] + nom_x[10];
   out_7211975948903307689[11] = delta_x[10] + nom_x[11];
   out_7211975948903307689[12] = delta_x[11] + nom_x[12];
   out_7211975948903307689[13] = delta_x[12] + nom_x[13];
   out_7211975948903307689[14] = delta_x[13] + nom_x[14];
   out_7211975948903307689[15] = delta_x[14] + nom_x[15];
   out_7211975948903307689[16] = delta_x[15] + nom_x[16];
   out_7211975948903307689[17] = delta_x[16] + nom_x[17];
   out_7211975948903307689[18] = delta_x[17] + nom_x[18];
   out_7211975948903307689[19] = delta_x[18] + nom_x[19];
   out_7211975948903307689[20] = delta_x[19] + nom_x[20];
   out_7211975948903307689[21] = delta_x[20] + nom_x[21];
}
void inv_err_fun(double *nom_x, double *true_x, double *out_1869955993172153366) {
   out_1869955993172153366[0] = -nom_x[0] + true_x[0];
   out_1869955993172153366[1] = -nom_x[1] + true_x[1];
   out_1869955993172153366[2] = -nom_x[2] + true_x[2];
   out_1869955993172153366[3] = 2*nom_x[3]*true_x[4] - 2*nom_x[4]*true_x[3] + 2*nom_x[5]*true_x[6] - 2*nom_x[6]*true_x[5];
   out_1869955993172153366[4] = 2*nom_x[3]*true_x[5] - 2*nom_x[4]*true_x[6] - 2*nom_x[5]*true_x[3] + 2*nom_x[6]*true_x[4];
   out_1869955993172153366[5] = 2*nom_x[3]*true_x[6] + 2*nom_x[4]*true_x[5] - 2*nom_x[5]*true_x[4] - 2*nom_x[6]*true_x[3];
   out_1869955993172153366[6] = -nom_x[7] + true_x[7];
   out_1869955993172153366[7] = -nom_x[8] + true_x[8];
   out_1869955993172153366[8] = -nom_x[9] + true_x[9];
   out_1869955993172153366[9] = -nom_x[10] + true_x[10];
   out_1869955993172153366[10] = -nom_x[11] + true_x[11];
   out_1869955993172153366[11] = -nom_x[12] + true_x[12];
   out_1869955993172153366[12] = -nom_x[13] + true_x[13];
   out_1869955993172153366[13] = -nom_x[14] + true_x[14];
   out_1869955993172153366[14] = -nom_x[15] + true_x[15];
   out_1869955993172153366[15] = -nom_x[16] + true_x[16];
   out_1869955993172153366[16] = -nom_x[17] + true_x[17];
   out_1869955993172153366[17] = -nom_x[18] + true_x[18];
   out_1869955993172153366[18] = -nom_x[19] + true_x[19];
   out_1869955993172153366[19] = -nom_x[20] + true_x[20];
   out_1869955993172153366[20] = -nom_x[21] + true_x[21];
}
void H_mod_fun(double *state, double *out_7005854625022851394) {
   out_7005854625022851394[0] = 1.0;
   out_7005854625022851394[1] = 0;
   out_7005854625022851394[2] = 0;
   out_7005854625022851394[3] = 0;
   out_7005854625022851394[4] = 0;
   out_7005854625022851394[5] = 0;
   out_7005854625022851394[6] = 0;
   out_7005854625022851394[7] = 0;
   out_7005854625022851394[8] = 0;
   out_7005854625022851394[9] = 0;
   out_7005854625022851394[10] = 0;
   out_7005854625022851394[11] = 0;
   out_7005854625022851394[12] = 0;
   out_7005854625022851394[13] = 0;
   out_7005854625022851394[14] = 0;
   out_7005854625022851394[15] = 0;
   out_7005854625022851394[16] = 0;
   out_7005854625022851394[17] = 0;
   out_7005854625022851394[18] = 0;
   out_7005854625022851394[19] = 0;
   out_7005854625022851394[20] = 0;
   out_7005854625022851394[21] = 0;
   out_7005854625022851394[22] = 1.0;
   out_7005854625022851394[23] = 0;
   out_7005854625022851394[24] = 0;
   out_7005854625022851394[25] = 0;
   out_7005854625022851394[26] = 0;
   out_7005854625022851394[27] = 0;
   out_7005854625022851394[28] = 0;
   out_7005854625022851394[29] = 0;
   out_7005854625022851394[30] = 0;
   out_7005854625022851394[31] = 0;
   out_7005854625022851394[32] = 0;
   out_7005854625022851394[33] = 0;
   out_7005854625022851394[34] = 0;
   out_7005854625022851394[35] = 0;
   out_7005854625022851394[36] = 0;
   out_7005854625022851394[37] = 0;
   out_7005854625022851394[38] = 0;
   out_7005854625022851394[39] = 0;
   out_7005854625022851394[40] = 0;
   out_7005854625022851394[41] = 0;
   out_7005854625022851394[42] = 0;
   out_7005854625022851394[43] = 0;
   out_7005854625022851394[44] = 1.0;
   out_7005854625022851394[45] = 0;
   out_7005854625022851394[46] = 0;
   out_7005854625022851394[47] = 0;
   out_7005854625022851394[48] = 0;
   out_7005854625022851394[49] = 0;
   out_7005854625022851394[50] = 0;
   out_7005854625022851394[51] = 0;
   out_7005854625022851394[52] = 0;
   out_7005854625022851394[53] = 0;
   out_7005854625022851394[54] = 0;
   out_7005854625022851394[55] = 0;
   out_7005854625022851394[56] = 0;
   out_7005854625022851394[57] = 0;
   out_7005854625022851394[58] = 0;
   out_7005854625022851394[59] = 0;
   out_7005854625022851394[60] = 0;
   out_7005854625022851394[61] = 0;
   out_7005854625022851394[62] = 0;
   out_7005854625022851394[63] = 0;
   out_7005854625022851394[64] = 0;
   out_7005854625022851394[65] = 0;
   out_7005854625022851394[66] = -0.5*state[4];
   out_7005854625022851394[67] = -0.5*state[5];
   out_7005854625022851394[68] = -0.5*state[6];
   out_7005854625022851394[69] = 0;
   out_7005854625022851394[70] = 0;
   out_7005854625022851394[71] = 0;
   out_7005854625022851394[72] = 0;
   out_7005854625022851394[73] = 0;
   out_7005854625022851394[74] = 0;
   out_7005854625022851394[75] = 0;
   out_7005854625022851394[76] = 0;
   out_7005854625022851394[77] = 0;
   out_7005854625022851394[78] = 0;
   out_7005854625022851394[79] = 0;
   out_7005854625022851394[80] = 0;
   out_7005854625022851394[81] = 0;
   out_7005854625022851394[82] = 0;
   out_7005854625022851394[83] = 0;
   out_7005854625022851394[84] = 0;
   out_7005854625022851394[85] = 0;
   out_7005854625022851394[86] = 0;
   out_7005854625022851394[87] = 0.5*state[3];
   out_7005854625022851394[88] = 0.5*state[6];
   out_7005854625022851394[89] = -0.5*state[5];
   out_7005854625022851394[90] = 0;
   out_7005854625022851394[91] = 0;
   out_7005854625022851394[92] = 0;
   out_7005854625022851394[93] = 0;
   out_7005854625022851394[94] = 0;
   out_7005854625022851394[95] = 0;
   out_7005854625022851394[96] = 0;
   out_7005854625022851394[97] = 0;
   out_7005854625022851394[98] = 0;
   out_7005854625022851394[99] = 0;
   out_7005854625022851394[100] = 0;
   out_7005854625022851394[101] = 0;
   out_7005854625022851394[102] = 0;
   out_7005854625022851394[103] = 0;
   out_7005854625022851394[104] = 0;
   out_7005854625022851394[105] = 0;
   out_7005854625022851394[106] = 0;
   out_7005854625022851394[107] = 0;
   out_7005854625022851394[108] = -0.5*state[6];
   out_7005854625022851394[109] = 0.5*state[3];
   out_7005854625022851394[110] = 0.5*state[4];
   out_7005854625022851394[111] = 0;
   out_7005854625022851394[112] = 0;
   out_7005854625022851394[113] = 0;
   out_7005854625022851394[114] = 0;
   out_7005854625022851394[115] = 0;
   out_7005854625022851394[116] = 0;
   out_7005854625022851394[117] = 0;
   out_7005854625022851394[118] = 0;
   out_7005854625022851394[119] = 0;
   out_7005854625022851394[120] = 0;
   out_7005854625022851394[121] = 0;
   out_7005854625022851394[122] = 0;
   out_7005854625022851394[123] = 0;
   out_7005854625022851394[124] = 0;
   out_7005854625022851394[125] = 0;
   out_7005854625022851394[126] = 0;
   out_7005854625022851394[127] = 0;
   out_7005854625022851394[128] = 0;
   out_7005854625022851394[129] = 0.5*state[5];
   out_7005854625022851394[130] = -0.5*state[4];
   out_7005854625022851394[131] = 0.5*state[3];
   out_7005854625022851394[132] = 0;
   out_7005854625022851394[133] = 0;
   out_7005854625022851394[134] = 0;
   out_7005854625022851394[135] = 0;
   out_7005854625022851394[136] = 0;
   out_7005854625022851394[137] = 0;
   out_7005854625022851394[138] = 0;
   out_7005854625022851394[139] = 0;
   out_7005854625022851394[140] = 0;
   out_7005854625022851394[141] = 0;
   out_7005854625022851394[142] = 0;
   out_7005854625022851394[143] = 0;
   out_7005854625022851394[144] = 0;
   out_7005854625022851394[145] = 0;
   out_7005854625022851394[146] = 0;
   out_7005854625022851394[147] = 0;
   out_7005854625022851394[148] = 0;
   out_7005854625022851394[149] = 0;
   out_7005854625022851394[150] = 0;
   out_7005854625022851394[151] = 0;
   out_7005854625022851394[152] = 0;
   out_7005854625022851394[153] = 1.0;
   out_7005854625022851394[154] = 0;
   out_7005854625022851394[155] = 0;
   out_7005854625022851394[156] = 0;
   out_7005854625022851394[157] = 0;
   out_7005854625022851394[158] = 0;
   out_7005854625022851394[159] = 0;
   out_7005854625022851394[160] = 0;
   out_7005854625022851394[161] = 0;
   out_7005854625022851394[162] = 0;
   out_7005854625022851394[163] = 0;
   out_7005854625022851394[164] = 0;
   out_7005854625022851394[165] = 0;
   out_7005854625022851394[166] = 0;
   out_7005854625022851394[167] = 0;
   out_7005854625022851394[168] = 0;
   out_7005854625022851394[169] = 0;
   out_7005854625022851394[170] = 0;
   out_7005854625022851394[171] = 0;
   out_7005854625022851394[172] = 0;
   out_7005854625022851394[173] = 0;
   out_7005854625022851394[174] = 0;
   out_7005854625022851394[175] = 1.0;
   out_7005854625022851394[176] = 0;
   out_7005854625022851394[177] = 0;
   out_7005854625022851394[178] = 0;
   out_7005854625022851394[179] = 0;
   out_7005854625022851394[180] = 0;
   out_7005854625022851394[181] = 0;
   out_7005854625022851394[182] = 0;
   out_7005854625022851394[183] = 0;
   out_7005854625022851394[184] = 0;
   out_7005854625022851394[185] = 0;
   out_7005854625022851394[186] = 0;
   out_7005854625022851394[187] = 0;
   out_7005854625022851394[188] = 0;
   out_7005854625022851394[189] = 0;
   out_7005854625022851394[190] = 0;
   out_7005854625022851394[191] = 0;
   out_7005854625022851394[192] = 0;
   out_7005854625022851394[193] = 0;
   out_7005854625022851394[194] = 0;
   out_7005854625022851394[195] = 0;
   out_7005854625022851394[196] = 0;
   out_7005854625022851394[197] = 1.0;
   out_7005854625022851394[198] = 0;
   out_7005854625022851394[199] = 0;
   out_7005854625022851394[200] = 0;
   out_7005854625022851394[201] = 0;
   out_7005854625022851394[202] = 0;
   out_7005854625022851394[203] = 0;
   out_7005854625022851394[204] = 0;
   out_7005854625022851394[205] = 0;
   out_7005854625022851394[206] = 0;
   out_7005854625022851394[207] = 0;
   out_7005854625022851394[208] = 0;
   out_7005854625022851394[209] = 0;
   out_7005854625022851394[210] = 0;
   out_7005854625022851394[211] = 0;
   out_7005854625022851394[212] = 0;
   out_7005854625022851394[213] = 0;
   out_7005854625022851394[214] = 0;
   out_7005854625022851394[215] = 0;
   out_7005854625022851394[216] = 0;
   out_7005854625022851394[217] = 0;
   out_7005854625022851394[218] = 0;
   out_7005854625022851394[219] = 1.0;
   out_7005854625022851394[220] = 0;
   out_7005854625022851394[221] = 0;
   out_7005854625022851394[222] = 0;
   out_7005854625022851394[223] = 0;
   out_7005854625022851394[224] = 0;
   out_7005854625022851394[225] = 0;
   out_7005854625022851394[226] = 0;
   out_7005854625022851394[227] = 0;
   out_7005854625022851394[228] = 0;
   out_7005854625022851394[229] = 0;
   out_7005854625022851394[230] = 0;
   out_7005854625022851394[231] = 0;
   out_7005854625022851394[232] = 0;
   out_7005854625022851394[233] = 0;
   out_7005854625022851394[234] = 0;
   out_7005854625022851394[235] = 0;
   out_7005854625022851394[236] = 0;
   out_7005854625022851394[237] = 0;
   out_7005854625022851394[238] = 0;
   out_7005854625022851394[239] = 0;
   out_7005854625022851394[240] = 0;
   out_7005854625022851394[241] = 1.0;
   out_7005854625022851394[242] = 0;
   out_7005854625022851394[243] = 0;
   out_7005854625022851394[244] = 0;
   out_7005854625022851394[245] = 0;
   out_7005854625022851394[246] = 0;
   out_7005854625022851394[247] = 0;
   out_7005854625022851394[248] = 0;
   out_7005854625022851394[249] = 0;
   out_7005854625022851394[250] = 0;
   out_7005854625022851394[251] = 0;
   out_7005854625022851394[252] = 0;
   out_7005854625022851394[253] = 0;
   out_7005854625022851394[254] = 0;
   out_7005854625022851394[255] = 0;
   out_7005854625022851394[256] = 0;
   out_7005854625022851394[257] = 0;
   out_7005854625022851394[258] = 0;
   out_7005854625022851394[259] = 0;
   out_7005854625022851394[260] = 0;
   out_7005854625022851394[261] = 0;
   out_7005854625022851394[262] = 0;
   out_7005854625022851394[263] = 1.0;
   out_7005854625022851394[264] = 0;
   out_7005854625022851394[265] = 0;
   out_7005854625022851394[266] = 0;
   out_7005854625022851394[267] = 0;
   out_7005854625022851394[268] = 0;
   out_7005854625022851394[269] = 0;
   out_7005854625022851394[270] = 0;
   out_7005854625022851394[271] = 0;
   out_7005854625022851394[272] = 0;
   out_7005854625022851394[273] = 0;
   out_7005854625022851394[274] = 0;
   out_7005854625022851394[275] = 0;
   out_7005854625022851394[276] = 0;
   out_7005854625022851394[277] = 0;
   out_7005854625022851394[278] = 0;
   out_7005854625022851394[279] = 0;
   out_7005854625022851394[280] = 0;
   out_7005854625022851394[281] = 0;
   out_7005854625022851394[282] = 0;
   out_7005854625022851394[283] = 0;
   out_7005854625022851394[284] = 0;
   out_7005854625022851394[285] = 1.0;
   out_7005854625022851394[286] = 0;
   out_7005854625022851394[287] = 0;
   out_7005854625022851394[288] = 0;
   out_7005854625022851394[289] = 0;
   out_7005854625022851394[290] = 0;
   out_7005854625022851394[291] = 0;
   out_7005854625022851394[292] = 0;
   out_7005854625022851394[293] = 0;
   out_7005854625022851394[294] = 0;
   out_7005854625022851394[295] = 0;
   out_7005854625022851394[296] = 0;
   out_7005854625022851394[297] = 0;
   out_7005854625022851394[298] = 0;
   out_7005854625022851394[299] = 0;
   out_7005854625022851394[300] = 0;
   out_7005854625022851394[301] = 0;
   out_7005854625022851394[302] = 0;
   out_7005854625022851394[303] = 0;
   out_7005854625022851394[304] = 0;
   out_7005854625022851394[305] = 0;
   out_7005854625022851394[306] = 0;
   out_7005854625022851394[307] = 1.0;
   out_7005854625022851394[308] = 0;
   out_7005854625022851394[309] = 0;
   out_7005854625022851394[310] = 0;
   out_7005854625022851394[311] = 0;
   out_7005854625022851394[312] = 0;
   out_7005854625022851394[313] = 0;
   out_7005854625022851394[314] = 0;
   out_7005854625022851394[315] = 0;
   out_7005854625022851394[316] = 0;
   out_7005854625022851394[317] = 0;
   out_7005854625022851394[318] = 0;
   out_7005854625022851394[319] = 0;
   out_7005854625022851394[320] = 0;
   out_7005854625022851394[321] = 0;
   out_7005854625022851394[322] = 0;
   out_7005854625022851394[323] = 0;
   out_7005854625022851394[324] = 0;
   out_7005854625022851394[325] = 0;
   out_7005854625022851394[326] = 0;
   out_7005854625022851394[327] = 0;
   out_7005854625022851394[328] = 0;
   out_7005854625022851394[329] = 1.0;
   out_7005854625022851394[330] = 0;
   out_7005854625022851394[331] = 0;
   out_7005854625022851394[332] = 0;
   out_7005854625022851394[333] = 0;
   out_7005854625022851394[334] = 0;
   out_7005854625022851394[335] = 0;
   out_7005854625022851394[336] = 0;
   out_7005854625022851394[337] = 0;
   out_7005854625022851394[338] = 0;
   out_7005854625022851394[339] = 0;
   out_7005854625022851394[340] = 0;
   out_7005854625022851394[341] = 0;
   out_7005854625022851394[342] = 0;
   out_7005854625022851394[343] = 0;
   out_7005854625022851394[344] = 0;
   out_7005854625022851394[345] = 0;
   out_7005854625022851394[346] = 0;
   out_7005854625022851394[347] = 0;
   out_7005854625022851394[348] = 0;
   out_7005854625022851394[349] = 0;
   out_7005854625022851394[350] = 0;
   out_7005854625022851394[351] = 1.0;
   out_7005854625022851394[352] = 0;
   out_7005854625022851394[353] = 0;
   out_7005854625022851394[354] = 0;
   out_7005854625022851394[355] = 0;
   out_7005854625022851394[356] = 0;
   out_7005854625022851394[357] = 0;
   out_7005854625022851394[358] = 0;
   out_7005854625022851394[359] = 0;
   out_7005854625022851394[360] = 0;
   out_7005854625022851394[361] = 0;
   out_7005854625022851394[362] = 0;
   out_7005854625022851394[363] = 0;
   out_7005854625022851394[364] = 0;
   out_7005854625022851394[365] = 0;
   out_7005854625022851394[366] = 0;
   out_7005854625022851394[367] = 0;
   out_7005854625022851394[368] = 0;
   out_7005854625022851394[369] = 0;
   out_7005854625022851394[370] = 0;
   out_7005854625022851394[371] = 0;
   out_7005854625022851394[372] = 0;
   out_7005854625022851394[373] = 1.0;
   out_7005854625022851394[374] = 0;
   out_7005854625022851394[375] = 0;
   out_7005854625022851394[376] = 0;
   out_7005854625022851394[377] = 0;
   out_7005854625022851394[378] = 0;
   out_7005854625022851394[379] = 0;
   out_7005854625022851394[380] = 0;
   out_7005854625022851394[381] = 0;
   out_7005854625022851394[382] = 0;
   out_7005854625022851394[383] = 0;
   out_7005854625022851394[384] = 0;
   out_7005854625022851394[385] = 0;
   out_7005854625022851394[386] = 0;
   out_7005854625022851394[387] = 0;
   out_7005854625022851394[388] = 0;
   out_7005854625022851394[389] = 0;
   out_7005854625022851394[390] = 0;
   out_7005854625022851394[391] = 0;
   out_7005854625022851394[392] = 0;
   out_7005854625022851394[393] = 0;
   out_7005854625022851394[394] = 0;
   out_7005854625022851394[395] = 1.0;
   out_7005854625022851394[396] = 0;
   out_7005854625022851394[397] = 0;
   out_7005854625022851394[398] = 0;
   out_7005854625022851394[399] = 0;
   out_7005854625022851394[400] = 0;
   out_7005854625022851394[401] = 0;
   out_7005854625022851394[402] = 0;
   out_7005854625022851394[403] = 0;
   out_7005854625022851394[404] = 0;
   out_7005854625022851394[405] = 0;
   out_7005854625022851394[406] = 0;
   out_7005854625022851394[407] = 0;
   out_7005854625022851394[408] = 0;
   out_7005854625022851394[409] = 0;
   out_7005854625022851394[410] = 0;
   out_7005854625022851394[411] = 0;
   out_7005854625022851394[412] = 0;
   out_7005854625022851394[413] = 0;
   out_7005854625022851394[414] = 0;
   out_7005854625022851394[415] = 0;
   out_7005854625022851394[416] = 0;
   out_7005854625022851394[417] = 1.0;
   out_7005854625022851394[418] = 0;
   out_7005854625022851394[419] = 0;
   out_7005854625022851394[420] = 0;
   out_7005854625022851394[421] = 0;
   out_7005854625022851394[422] = 0;
   out_7005854625022851394[423] = 0;
   out_7005854625022851394[424] = 0;
   out_7005854625022851394[425] = 0;
   out_7005854625022851394[426] = 0;
   out_7005854625022851394[427] = 0;
   out_7005854625022851394[428] = 0;
   out_7005854625022851394[429] = 0;
   out_7005854625022851394[430] = 0;
   out_7005854625022851394[431] = 0;
   out_7005854625022851394[432] = 0;
   out_7005854625022851394[433] = 0;
   out_7005854625022851394[434] = 0;
   out_7005854625022851394[435] = 0;
   out_7005854625022851394[436] = 0;
   out_7005854625022851394[437] = 0;
   out_7005854625022851394[438] = 0;
   out_7005854625022851394[439] = 1.0;
   out_7005854625022851394[440] = 0;
   out_7005854625022851394[441] = 0;
   out_7005854625022851394[442] = 0;
   out_7005854625022851394[443] = 0;
   out_7005854625022851394[444] = 0;
   out_7005854625022851394[445] = 0;
   out_7005854625022851394[446] = 0;
   out_7005854625022851394[447] = 0;
   out_7005854625022851394[448] = 0;
   out_7005854625022851394[449] = 0;
   out_7005854625022851394[450] = 0;
   out_7005854625022851394[451] = 0;
   out_7005854625022851394[452] = 0;
   out_7005854625022851394[453] = 0;
   out_7005854625022851394[454] = 0;
   out_7005854625022851394[455] = 0;
   out_7005854625022851394[456] = 0;
   out_7005854625022851394[457] = 0;
   out_7005854625022851394[458] = 0;
   out_7005854625022851394[459] = 0;
   out_7005854625022851394[460] = 0;
   out_7005854625022851394[461] = 1.0;
}
void f_fun(double *state, double dt, double *out_5267891945337088690) {
   out_5267891945337088690[0] = dt*state[7] + state[0];
   out_5267891945337088690[1] = dt*state[8] + state[1];
   out_5267891945337088690[2] = dt*state[9] + state[2];
   out_5267891945337088690[3] = dt*(-0.5*state[4]*state[10] - 0.5*state[5]*state[11] - 0.5*state[6]*state[12]) + state[3];
   out_5267891945337088690[4] = dt*(0.5*state[3]*state[10] + 0.5*state[5]*state[12] - 0.5*state[6]*state[11]) + state[4];
   out_5267891945337088690[5] = dt*(0.5*state[3]*state[11] - 0.5*state[4]*state[12] + 0.5*state[6]*state[10]) + state[5];
   out_5267891945337088690[6] = dt*(0.5*state[3]*state[12] + 0.5*state[4]*state[11] - 0.5*state[5]*state[10]) + state[6];
   out_5267891945337088690[7] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]) + state[7];
   out_5267891945337088690[8] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]) + state[8];
   out_5267891945337088690[9] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]) + state[9];
   out_5267891945337088690[10] = state[10];
   out_5267891945337088690[11] = state[11];
   out_5267891945337088690[12] = state[12];
   out_5267891945337088690[13] = state[13];
   out_5267891945337088690[14] = state[14];
   out_5267891945337088690[15] = state[15];
   out_5267891945337088690[16] = state[16];
   out_5267891945337088690[17] = state[17];
   out_5267891945337088690[18] = state[18];
   out_5267891945337088690[19] = state[19];
   out_5267891945337088690[20] = state[20];
   out_5267891945337088690[21] = state[21];
}
void F_fun(double *state, double dt, double *out_2581783222534495222) {
   out_2581783222534495222[0] = 1;
   out_2581783222534495222[1] = 0;
   out_2581783222534495222[2] = 0;
   out_2581783222534495222[3] = 0;
   out_2581783222534495222[4] = 0;
   out_2581783222534495222[5] = 0;
   out_2581783222534495222[6] = dt;
   out_2581783222534495222[7] = 0;
   out_2581783222534495222[8] = 0;
   out_2581783222534495222[9] = 0;
   out_2581783222534495222[10] = 0;
   out_2581783222534495222[11] = 0;
   out_2581783222534495222[12] = 0;
   out_2581783222534495222[13] = 0;
   out_2581783222534495222[14] = 0;
   out_2581783222534495222[15] = 0;
   out_2581783222534495222[16] = 0;
   out_2581783222534495222[17] = 0;
   out_2581783222534495222[18] = 0;
   out_2581783222534495222[19] = 0;
   out_2581783222534495222[20] = 0;
   out_2581783222534495222[21] = 0;
   out_2581783222534495222[22] = 1;
   out_2581783222534495222[23] = 0;
   out_2581783222534495222[24] = 0;
   out_2581783222534495222[25] = 0;
   out_2581783222534495222[26] = 0;
   out_2581783222534495222[27] = 0;
   out_2581783222534495222[28] = dt;
   out_2581783222534495222[29] = 0;
   out_2581783222534495222[30] = 0;
   out_2581783222534495222[31] = 0;
   out_2581783222534495222[32] = 0;
   out_2581783222534495222[33] = 0;
   out_2581783222534495222[34] = 0;
   out_2581783222534495222[35] = 0;
   out_2581783222534495222[36] = 0;
   out_2581783222534495222[37] = 0;
   out_2581783222534495222[38] = 0;
   out_2581783222534495222[39] = 0;
   out_2581783222534495222[40] = 0;
   out_2581783222534495222[41] = 0;
   out_2581783222534495222[42] = 0;
   out_2581783222534495222[43] = 0;
   out_2581783222534495222[44] = 1;
   out_2581783222534495222[45] = 0;
   out_2581783222534495222[46] = 0;
   out_2581783222534495222[47] = 0;
   out_2581783222534495222[48] = 0;
   out_2581783222534495222[49] = 0;
   out_2581783222534495222[50] = dt;
   out_2581783222534495222[51] = 0;
   out_2581783222534495222[52] = 0;
   out_2581783222534495222[53] = 0;
   out_2581783222534495222[54] = 0;
   out_2581783222534495222[55] = 0;
   out_2581783222534495222[56] = 0;
   out_2581783222534495222[57] = 0;
   out_2581783222534495222[58] = 0;
   out_2581783222534495222[59] = 0;
   out_2581783222534495222[60] = 0;
   out_2581783222534495222[61] = 0;
   out_2581783222534495222[62] = 0;
   out_2581783222534495222[63] = 0;
   out_2581783222534495222[64] = 0;
   out_2581783222534495222[65] = 0;
   out_2581783222534495222[66] = 1;
   out_2581783222534495222[67] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[11] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_2581783222534495222[68] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[12] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[10] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[11]);
   out_2581783222534495222[69] = 0;
   out_2581783222534495222[70] = 0;
   out_2581783222534495222[71] = 0;
   out_2581783222534495222[72] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_2581783222534495222[73] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2581783222534495222[74] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2581783222534495222[75] = 0;
   out_2581783222534495222[76] = 0;
   out_2581783222534495222[77] = 0;
   out_2581783222534495222[78] = 0;
   out_2581783222534495222[79] = 0;
   out_2581783222534495222[80] = 0;
   out_2581783222534495222[81] = 0;
   out_2581783222534495222[82] = 0;
   out_2581783222534495222[83] = 0;
   out_2581783222534495222[84] = 0;
   out_2581783222534495222[85] = 0;
   out_2581783222534495222[86] = 0;
   out_2581783222534495222[87] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[11] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[10] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[12]);
   out_2581783222534495222[88] = 1;
   out_2581783222534495222[89] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[12] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[11] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[10]);
   out_2581783222534495222[90] = 0;
   out_2581783222534495222[91] = 0;
   out_2581783222534495222[92] = 0;
   out_2581783222534495222[93] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2581783222534495222[94] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_2581783222534495222[95] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2581783222534495222[96] = 0;
   out_2581783222534495222[97] = 0;
   out_2581783222534495222[98] = 0;
   out_2581783222534495222[99] = 0;
   out_2581783222534495222[100] = 0;
   out_2581783222534495222[101] = 0;
   out_2581783222534495222[102] = 0;
   out_2581783222534495222[103] = 0;
   out_2581783222534495222[104] = 0;
   out_2581783222534495222[105] = 0;
   out_2581783222534495222[106] = 0;
   out_2581783222534495222[107] = 0;
   out_2581783222534495222[108] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[12] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[10] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[11]);
   out_2581783222534495222[109] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[12] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[11] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[10]);
   out_2581783222534495222[110] = 1;
   out_2581783222534495222[111] = 0;
   out_2581783222534495222[112] = 0;
   out_2581783222534495222[113] = 0;
   out_2581783222534495222[114] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2581783222534495222[115] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2581783222534495222[116] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_2581783222534495222[117] = 0;
   out_2581783222534495222[118] = 0;
   out_2581783222534495222[119] = 0;
   out_2581783222534495222[120] = 0;
   out_2581783222534495222[121] = 0;
   out_2581783222534495222[122] = 0;
   out_2581783222534495222[123] = 0;
   out_2581783222534495222[124] = 0;
   out_2581783222534495222[125] = 0;
   out_2581783222534495222[126] = 0;
   out_2581783222534495222[127] = 0;
   out_2581783222534495222[128] = 0;
   out_2581783222534495222[129] = 0;
   out_2581783222534495222[130] = dt*((2*state[3]*state[4] + 2*state[5]*state[6])*state[17] + (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_2581783222534495222[131] = dt*((2*state[3]*state[4] - 2*state[5]*state[6])*state[18] + (-2*state[3]*state[6] - 2*state[4]*state[5])*state[16] + (-pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[17]);
   out_2581783222534495222[132] = 1;
   out_2581783222534495222[133] = 0;
   out_2581783222534495222[134] = 0;
   out_2581783222534495222[135] = 0;
   out_2581783222534495222[136] = 0;
   out_2581783222534495222[137] = 0;
   out_2581783222534495222[138] = 0;
   out_2581783222534495222[139] = 0;
   out_2581783222534495222[140] = 0;
   out_2581783222534495222[141] = dt*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_2581783222534495222[142] = dt*(-2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2581783222534495222[143] = dt*(2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2581783222534495222[144] = 0;
   out_2581783222534495222[145] = 0;
   out_2581783222534495222[146] = 0;
   out_2581783222534495222[147] = 0;
   out_2581783222534495222[148] = 0;
   out_2581783222534495222[149] = 0;
   out_2581783222534495222[150] = dt*(-(2*state[3]*state[4] + 2*state[5]*state[6])*state[17] - (-2*state[3]*state[5] + 2*state[4]*state[6])*state[16] - (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[18]);
   out_2581783222534495222[151] = 0;
   out_2581783222534495222[152] = dt*((2*state[3]*state[5] + 2*state[4]*state[6])*state[18] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[17] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[16]);
   out_2581783222534495222[153] = 0;
   out_2581783222534495222[154] = 1;
   out_2581783222534495222[155] = 0;
   out_2581783222534495222[156] = 0;
   out_2581783222534495222[157] = 0;
   out_2581783222534495222[158] = 0;
   out_2581783222534495222[159] = 0;
   out_2581783222534495222[160] = 0;
   out_2581783222534495222[161] = 0;
   out_2581783222534495222[162] = dt*(2*state[3]*state[6] + 2*state[4]*state[5]);
   out_2581783222534495222[163] = dt*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_2581783222534495222[164] = dt*(-2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2581783222534495222[165] = 0;
   out_2581783222534495222[166] = 0;
   out_2581783222534495222[167] = 0;
   out_2581783222534495222[168] = 0;
   out_2581783222534495222[169] = 0;
   out_2581783222534495222[170] = 0;
   out_2581783222534495222[171] = dt*((-2*state[3]*state[4] + 2*state[5]*state[6])*state[18] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[16] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[17]);
   out_2581783222534495222[172] = dt*((-2*state[3]*state[5] - 2*state[4]*state[6])*state[18] + (2*state[3]*state[6] - 2*state[4]*state[5])*state[17] + (-pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) + pow(state[6], 2))*state[16]);
   out_2581783222534495222[173] = 0;
   out_2581783222534495222[174] = 0;
   out_2581783222534495222[175] = 0;
   out_2581783222534495222[176] = 1;
   out_2581783222534495222[177] = 0;
   out_2581783222534495222[178] = 0;
   out_2581783222534495222[179] = 0;
   out_2581783222534495222[180] = 0;
   out_2581783222534495222[181] = 0;
   out_2581783222534495222[182] = 0;
   out_2581783222534495222[183] = dt*(-2*state[3]*state[5] + 2*state[4]*state[6]);
   out_2581783222534495222[184] = dt*(2*state[3]*state[4] + 2*state[5]*state[6]);
   out_2581783222534495222[185] = dt*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_2581783222534495222[186] = 0;
   out_2581783222534495222[187] = 0;
   out_2581783222534495222[188] = 0;
   out_2581783222534495222[189] = 0;
   out_2581783222534495222[190] = 0;
   out_2581783222534495222[191] = 0;
   out_2581783222534495222[192] = 0;
   out_2581783222534495222[193] = 0;
   out_2581783222534495222[194] = 0;
   out_2581783222534495222[195] = 0;
   out_2581783222534495222[196] = 0;
   out_2581783222534495222[197] = 0;
   out_2581783222534495222[198] = 1;
   out_2581783222534495222[199] = 0;
   out_2581783222534495222[200] = 0;
   out_2581783222534495222[201] = 0;
   out_2581783222534495222[202] = 0;
   out_2581783222534495222[203] = 0;
   out_2581783222534495222[204] = 0;
   out_2581783222534495222[205] = 0;
   out_2581783222534495222[206] = 0;
   out_2581783222534495222[207] = 0;
   out_2581783222534495222[208] = 0;
   out_2581783222534495222[209] = 0;
   out_2581783222534495222[210] = 0;
   out_2581783222534495222[211] = 0;
   out_2581783222534495222[212] = 0;
   out_2581783222534495222[213] = 0;
   out_2581783222534495222[214] = 0;
   out_2581783222534495222[215] = 0;
   out_2581783222534495222[216] = 0;
   out_2581783222534495222[217] = 0;
   out_2581783222534495222[218] = 0;
   out_2581783222534495222[219] = 0;
   out_2581783222534495222[220] = 1;
   out_2581783222534495222[221] = 0;
   out_2581783222534495222[222] = 0;
   out_2581783222534495222[223] = 0;
   out_2581783222534495222[224] = 0;
   out_2581783222534495222[225] = 0;
   out_2581783222534495222[226] = 0;
   out_2581783222534495222[227] = 0;
   out_2581783222534495222[228] = 0;
   out_2581783222534495222[229] = 0;
   out_2581783222534495222[230] = 0;
   out_2581783222534495222[231] = 0;
   out_2581783222534495222[232] = 0;
   out_2581783222534495222[233] = 0;
   out_2581783222534495222[234] = 0;
   out_2581783222534495222[235] = 0;
   out_2581783222534495222[236] = 0;
   out_2581783222534495222[237] = 0;
   out_2581783222534495222[238] = 0;
   out_2581783222534495222[239] = 0;
   out_2581783222534495222[240] = 0;
   out_2581783222534495222[241] = 0;
   out_2581783222534495222[242] = 1;
   out_2581783222534495222[243] = 0;
   out_2581783222534495222[244] = 0;
   out_2581783222534495222[245] = 0;
   out_2581783222534495222[246] = 0;
   out_2581783222534495222[247] = 0;
   out_2581783222534495222[248] = 0;
   out_2581783222534495222[249] = 0;
   out_2581783222534495222[250] = 0;
   out_2581783222534495222[251] = 0;
   out_2581783222534495222[252] = 0;
   out_2581783222534495222[253] = 0;
   out_2581783222534495222[254] = 0;
   out_2581783222534495222[255] = 0;
   out_2581783222534495222[256] = 0;
   out_2581783222534495222[257] = 0;
   out_2581783222534495222[258] = 0;
   out_2581783222534495222[259] = 0;
   out_2581783222534495222[260] = 0;
   out_2581783222534495222[261] = 0;
   out_2581783222534495222[262] = 0;
   out_2581783222534495222[263] = 0;
   out_2581783222534495222[264] = 1;
   out_2581783222534495222[265] = 0;
   out_2581783222534495222[266] = 0;
   out_2581783222534495222[267] = 0;
   out_2581783222534495222[268] = 0;
   out_2581783222534495222[269] = 0;
   out_2581783222534495222[270] = 0;
   out_2581783222534495222[271] = 0;
   out_2581783222534495222[272] = 0;
   out_2581783222534495222[273] = 0;
   out_2581783222534495222[274] = 0;
   out_2581783222534495222[275] = 0;
   out_2581783222534495222[276] = 0;
   out_2581783222534495222[277] = 0;
   out_2581783222534495222[278] = 0;
   out_2581783222534495222[279] = 0;
   out_2581783222534495222[280] = 0;
   out_2581783222534495222[281] = 0;
   out_2581783222534495222[282] = 0;
   out_2581783222534495222[283] = 0;
   out_2581783222534495222[284] = 0;
   out_2581783222534495222[285] = 0;
   out_2581783222534495222[286] = 1;
   out_2581783222534495222[287] = 0;
   out_2581783222534495222[288] = 0;
   out_2581783222534495222[289] = 0;
   out_2581783222534495222[290] = 0;
   out_2581783222534495222[291] = 0;
   out_2581783222534495222[292] = 0;
   out_2581783222534495222[293] = 0;
   out_2581783222534495222[294] = 0;
   out_2581783222534495222[295] = 0;
   out_2581783222534495222[296] = 0;
   out_2581783222534495222[297] = 0;
   out_2581783222534495222[298] = 0;
   out_2581783222534495222[299] = 0;
   out_2581783222534495222[300] = 0;
   out_2581783222534495222[301] = 0;
   out_2581783222534495222[302] = 0;
   out_2581783222534495222[303] = 0;
   out_2581783222534495222[304] = 0;
   out_2581783222534495222[305] = 0;
   out_2581783222534495222[306] = 0;
   out_2581783222534495222[307] = 0;
   out_2581783222534495222[308] = 1;
   out_2581783222534495222[309] = 0;
   out_2581783222534495222[310] = 0;
   out_2581783222534495222[311] = 0;
   out_2581783222534495222[312] = 0;
   out_2581783222534495222[313] = 0;
   out_2581783222534495222[314] = 0;
   out_2581783222534495222[315] = 0;
   out_2581783222534495222[316] = 0;
   out_2581783222534495222[317] = 0;
   out_2581783222534495222[318] = 0;
   out_2581783222534495222[319] = 0;
   out_2581783222534495222[320] = 0;
   out_2581783222534495222[321] = 0;
   out_2581783222534495222[322] = 0;
   out_2581783222534495222[323] = 0;
   out_2581783222534495222[324] = 0;
   out_2581783222534495222[325] = 0;
   out_2581783222534495222[326] = 0;
   out_2581783222534495222[327] = 0;
   out_2581783222534495222[328] = 0;
   out_2581783222534495222[329] = 0;
   out_2581783222534495222[330] = 1;
   out_2581783222534495222[331] = 0;
   out_2581783222534495222[332] = 0;
   out_2581783222534495222[333] = 0;
   out_2581783222534495222[334] = 0;
   out_2581783222534495222[335] = 0;
   out_2581783222534495222[336] = 0;
   out_2581783222534495222[337] = 0;
   out_2581783222534495222[338] = 0;
   out_2581783222534495222[339] = 0;
   out_2581783222534495222[340] = 0;
   out_2581783222534495222[341] = 0;
   out_2581783222534495222[342] = 0;
   out_2581783222534495222[343] = 0;
   out_2581783222534495222[344] = 0;
   out_2581783222534495222[345] = 0;
   out_2581783222534495222[346] = 0;
   out_2581783222534495222[347] = 0;
   out_2581783222534495222[348] = 0;
   out_2581783222534495222[349] = 0;
   out_2581783222534495222[350] = 0;
   out_2581783222534495222[351] = 0;
   out_2581783222534495222[352] = 1;
   out_2581783222534495222[353] = 0;
   out_2581783222534495222[354] = 0;
   out_2581783222534495222[355] = 0;
   out_2581783222534495222[356] = 0;
   out_2581783222534495222[357] = 0;
   out_2581783222534495222[358] = 0;
   out_2581783222534495222[359] = 0;
   out_2581783222534495222[360] = 0;
   out_2581783222534495222[361] = 0;
   out_2581783222534495222[362] = 0;
   out_2581783222534495222[363] = 0;
   out_2581783222534495222[364] = 0;
   out_2581783222534495222[365] = 0;
   out_2581783222534495222[366] = 0;
   out_2581783222534495222[367] = 0;
   out_2581783222534495222[368] = 0;
   out_2581783222534495222[369] = 0;
   out_2581783222534495222[370] = 0;
   out_2581783222534495222[371] = 0;
   out_2581783222534495222[372] = 0;
   out_2581783222534495222[373] = 0;
   out_2581783222534495222[374] = 1;
   out_2581783222534495222[375] = 0;
   out_2581783222534495222[376] = 0;
   out_2581783222534495222[377] = 0;
   out_2581783222534495222[378] = 0;
   out_2581783222534495222[379] = 0;
   out_2581783222534495222[380] = 0;
   out_2581783222534495222[381] = 0;
   out_2581783222534495222[382] = 0;
   out_2581783222534495222[383] = 0;
   out_2581783222534495222[384] = 0;
   out_2581783222534495222[385] = 0;
   out_2581783222534495222[386] = 0;
   out_2581783222534495222[387] = 0;
   out_2581783222534495222[388] = 0;
   out_2581783222534495222[389] = 0;
   out_2581783222534495222[390] = 0;
   out_2581783222534495222[391] = 0;
   out_2581783222534495222[392] = 0;
   out_2581783222534495222[393] = 0;
   out_2581783222534495222[394] = 0;
   out_2581783222534495222[395] = 0;
   out_2581783222534495222[396] = 1;
   out_2581783222534495222[397] = 0;
   out_2581783222534495222[398] = 0;
   out_2581783222534495222[399] = 0;
   out_2581783222534495222[400] = 0;
   out_2581783222534495222[401] = 0;
   out_2581783222534495222[402] = 0;
   out_2581783222534495222[403] = 0;
   out_2581783222534495222[404] = 0;
   out_2581783222534495222[405] = 0;
   out_2581783222534495222[406] = 0;
   out_2581783222534495222[407] = 0;
   out_2581783222534495222[408] = 0;
   out_2581783222534495222[409] = 0;
   out_2581783222534495222[410] = 0;
   out_2581783222534495222[411] = 0;
   out_2581783222534495222[412] = 0;
   out_2581783222534495222[413] = 0;
   out_2581783222534495222[414] = 0;
   out_2581783222534495222[415] = 0;
   out_2581783222534495222[416] = 0;
   out_2581783222534495222[417] = 0;
   out_2581783222534495222[418] = 1;
   out_2581783222534495222[419] = 0;
   out_2581783222534495222[420] = 0;
   out_2581783222534495222[421] = 0;
   out_2581783222534495222[422] = 0;
   out_2581783222534495222[423] = 0;
   out_2581783222534495222[424] = 0;
   out_2581783222534495222[425] = 0;
   out_2581783222534495222[426] = 0;
   out_2581783222534495222[427] = 0;
   out_2581783222534495222[428] = 0;
   out_2581783222534495222[429] = 0;
   out_2581783222534495222[430] = 0;
   out_2581783222534495222[431] = 0;
   out_2581783222534495222[432] = 0;
   out_2581783222534495222[433] = 0;
   out_2581783222534495222[434] = 0;
   out_2581783222534495222[435] = 0;
   out_2581783222534495222[436] = 0;
   out_2581783222534495222[437] = 0;
   out_2581783222534495222[438] = 0;
   out_2581783222534495222[439] = 0;
   out_2581783222534495222[440] = 1;
}
void h_4(double *state, double *unused, double *out_6899066197363664588) {
   out_6899066197363664588[0] = state[10] + state[13];
   out_6899066197363664588[1] = state[11] + state[14];
   out_6899066197363664588[2] = state[12] + state[15];
}
void H_4(double *state, double *unused, double *out_7659050984387611860) {
   out_7659050984387611860[0] = 0;
   out_7659050984387611860[1] = 0;
   out_7659050984387611860[2] = 0;
   out_7659050984387611860[3] = 0;
   out_7659050984387611860[4] = 0;
   out_7659050984387611860[5] = 0;
   out_7659050984387611860[6] = 0;
   out_7659050984387611860[7] = 0;
   out_7659050984387611860[8] = 0;
   out_7659050984387611860[9] = 0;
   out_7659050984387611860[10] = 1;
   out_7659050984387611860[11] = 0;
   out_7659050984387611860[12] = 0;
   out_7659050984387611860[13] = 1;
   out_7659050984387611860[14] = 0;
   out_7659050984387611860[15] = 0;
   out_7659050984387611860[16] = 0;
   out_7659050984387611860[17] = 0;
   out_7659050984387611860[18] = 0;
   out_7659050984387611860[19] = 0;
   out_7659050984387611860[20] = 0;
   out_7659050984387611860[21] = 0;
   out_7659050984387611860[22] = 0;
   out_7659050984387611860[23] = 0;
   out_7659050984387611860[24] = 0;
   out_7659050984387611860[25] = 0;
   out_7659050984387611860[26] = 0;
   out_7659050984387611860[27] = 0;
   out_7659050984387611860[28] = 0;
   out_7659050984387611860[29] = 0;
   out_7659050984387611860[30] = 0;
   out_7659050984387611860[31] = 0;
   out_7659050984387611860[32] = 0;
   out_7659050984387611860[33] = 1;
   out_7659050984387611860[34] = 0;
   out_7659050984387611860[35] = 0;
   out_7659050984387611860[36] = 1;
   out_7659050984387611860[37] = 0;
   out_7659050984387611860[38] = 0;
   out_7659050984387611860[39] = 0;
   out_7659050984387611860[40] = 0;
   out_7659050984387611860[41] = 0;
   out_7659050984387611860[42] = 0;
   out_7659050984387611860[43] = 0;
   out_7659050984387611860[44] = 0;
   out_7659050984387611860[45] = 0;
   out_7659050984387611860[46] = 0;
   out_7659050984387611860[47] = 0;
   out_7659050984387611860[48] = 0;
   out_7659050984387611860[49] = 0;
   out_7659050984387611860[50] = 0;
   out_7659050984387611860[51] = 0;
   out_7659050984387611860[52] = 0;
   out_7659050984387611860[53] = 0;
   out_7659050984387611860[54] = 0;
   out_7659050984387611860[55] = 0;
   out_7659050984387611860[56] = 1;
   out_7659050984387611860[57] = 0;
   out_7659050984387611860[58] = 0;
   out_7659050984387611860[59] = 1;
   out_7659050984387611860[60] = 0;
   out_7659050984387611860[61] = 0;
   out_7659050984387611860[62] = 0;
   out_7659050984387611860[63] = 0;
   out_7659050984387611860[64] = 0;
   out_7659050984387611860[65] = 0;
}
void h_9(double *state, double *unused, double *out_1671602116294396863) {
   out_1671602116294396863[0] = state[10];
   out_1671602116294396863[1] = state[11];
   out_1671602116294396863[2] = state[12];
}
void H_9(double *state, double *unused, double *out_371832049123164390) {
   out_371832049123164390[0] = 0;
   out_371832049123164390[1] = 0;
   out_371832049123164390[2] = 0;
   out_371832049123164390[3] = 0;
   out_371832049123164390[4] = 0;
   out_371832049123164390[5] = 0;
   out_371832049123164390[6] = 0;
   out_371832049123164390[7] = 0;
   out_371832049123164390[8] = 0;
   out_371832049123164390[9] = 0;
   out_371832049123164390[10] = 1;
   out_371832049123164390[11] = 0;
   out_371832049123164390[12] = 0;
   out_371832049123164390[13] = 0;
   out_371832049123164390[14] = 0;
   out_371832049123164390[15] = 0;
   out_371832049123164390[16] = 0;
   out_371832049123164390[17] = 0;
   out_371832049123164390[18] = 0;
   out_371832049123164390[19] = 0;
   out_371832049123164390[20] = 0;
   out_371832049123164390[21] = 0;
   out_371832049123164390[22] = 0;
   out_371832049123164390[23] = 0;
   out_371832049123164390[24] = 0;
   out_371832049123164390[25] = 0;
   out_371832049123164390[26] = 0;
   out_371832049123164390[27] = 0;
   out_371832049123164390[28] = 0;
   out_371832049123164390[29] = 0;
   out_371832049123164390[30] = 0;
   out_371832049123164390[31] = 0;
   out_371832049123164390[32] = 0;
   out_371832049123164390[33] = 1;
   out_371832049123164390[34] = 0;
   out_371832049123164390[35] = 0;
   out_371832049123164390[36] = 0;
   out_371832049123164390[37] = 0;
   out_371832049123164390[38] = 0;
   out_371832049123164390[39] = 0;
   out_371832049123164390[40] = 0;
   out_371832049123164390[41] = 0;
   out_371832049123164390[42] = 0;
   out_371832049123164390[43] = 0;
   out_371832049123164390[44] = 0;
   out_371832049123164390[45] = 0;
   out_371832049123164390[46] = 0;
   out_371832049123164390[47] = 0;
   out_371832049123164390[48] = 0;
   out_371832049123164390[49] = 0;
   out_371832049123164390[50] = 0;
   out_371832049123164390[51] = 0;
   out_371832049123164390[52] = 0;
   out_371832049123164390[53] = 0;
   out_371832049123164390[54] = 0;
   out_371832049123164390[55] = 0;
   out_371832049123164390[56] = 1;
   out_371832049123164390[57] = 0;
   out_371832049123164390[58] = 0;
   out_371832049123164390[59] = 0;
   out_371832049123164390[60] = 0;
   out_371832049123164390[61] = 0;
   out_371832049123164390[62] = 0;
   out_371832049123164390[63] = 0;
   out_371832049123164390[64] = 0;
   out_371832049123164390[65] = 0;
}
void h_10(double *state, double *unused, double *out_119849606827224068) {
   out_119849606827224068[0] = 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0] + state[16] + state[19];
   out_119849606827224068[1] = 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2] + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1] + state[17] + state[20];
   out_119849606827224068[2] = 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1] + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0] + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[2] + state[18] + state[21];
}
void H_10(double *state, double *unused, double *out_8976141317441350647) {
   out_8976141317441350647[0] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*pow(state[0], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2));
   out_8976141317441350647[1] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_8976141317441350647[2] = -1195801500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(-2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[0]*state[2];
   out_8976141317441350647[3] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_8976141317441350647[4] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_8976141317441350647[5] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_8976141317441350647[6] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_8976141317441350647[7] = 0;
   out_8976141317441350647[8] = 0;
   out_8976141317441350647[9] = 0;
   out_8976141317441350647[10] = 0;
   out_8976141317441350647[11] = 0;
   out_8976141317441350647[12] = 0;
   out_8976141317441350647[13] = 0;
   out_8976141317441350647[14] = 0;
   out_8976141317441350647[15] = 0;
   out_8976141317441350647[16] = 1;
   out_8976141317441350647[17] = 0;
   out_8976141317441350647[18] = 0;
   out_8976141317441350647[19] = 1;
   out_8976141317441350647[20] = 0;
   out_8976141317441350647[21] = 0;
   out_8976141317441350647[22] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[0]*state[1];
   out_8976141317441350647[23] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*pow(state[1], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2));
   out_8976141317441350647[24] = -1195801500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[2], 2) + 398600500000000.0*(2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(-2*state[3]*state[6] + 2*state[4]*state[5])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[1]*state[2];
   out_8976141317441350647[25] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_8976141317441350647[26] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_8976141317441350647[27] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_8976141317441350647[28] = -797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_8976141317441350647[29] = 0;
   out_8976141317441350647[30] = 0;
   out_8976141317441350647[31] = 0;
   out_8976141317441350647[32] = 0;
   out_8976141317441350647[33] = 0;
   out_8976141317441350647[34] = 0;
   out_8976141317441350647[35] = 0;
   out_8976141317441350647[36] = 0;
   out_8976141317441350647[37] = 0;
   out_8976141317441350647[38] = 0;
   out_8976141317441350647[39] = 1;
   out_8976141317441350647[40] = 0;
   out_8976141317441350647[41] = 0;
   out_8976141317441350647[42] = 1;
   out_8976141317441350647[43] = 0;
   out_8976141317441350647[44] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[0], 2) + 398600500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[0]*state[2];
   out_8976141317441350647[45] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*pow(state[1], 2) + 398600500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5) - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[1] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[1]*state[2];
   out_8976141317441350647[46] = -1195801500000000.0*(-2*state[3]*state[4] + 2*state[5]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[1]*state[2] - 1195801500000000.0*(2*state[3]*state[5] + 2*state[4]*state[6])*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*state[0]*state[2] - 1195801500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -2.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*pow(state[2], 2) + 398600500000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*(pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2));
   out_8976141317441350647[47] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[5] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[3];
   out_8976141317441350647[48] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[3] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[4];
   out_8976141317441350647[49] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[3] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[6] - 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[5];
   out_8976141317441350647[50] = 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[0]*state[4] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[1]*state[5] + 797201000000000.0*pow(pow(state[0], 2) + pow(state[1], 2) + pow(state[2], 2), -1.5)*state[2]*state[6];
   out_8976141317441350647[51] = 0;
   out_8976141317441350647[52] = 0;
   out_8976141317441350647[53] = 0;
   out_8976141317441350647[54] = 0;
   out_8976141317441350647[55] = 0;
   out_8976141317441350647[56] = 0;
   out_8976141317441350647[57] = 0;
   out_8976141317441350647[58] = 0;
   out_8976141317441350647[59] = 0;
   out_8976141317441350647[60] = 0;
   out_8976141317441350647[61] = 0;
   out_8976141317441350647[62] = 1;
   out_8976141317441350647[63] = 0;
   out_8976141317441350647[64] = 0;
   out_8976141317441350647[65] = 1;
}
void h_12(double *state, double *unused, double *out_6955664201105629571) {
   out_6955664201105629571[0] = state[0];
   out_6955664201105629571[1] = state[1];
   out_6955664201105629571[2] = state[2];
}
void H_12(double *state, double *unused, double *out_2639594576355650065) {
   out_2639594576355650065[0] = 1;
   out_2639594576355650065[1] = 0;
   out_2639594576355650065[2] = 0;
   out_2639594576355650065[3] = 0;
   out_2639594576355650065[4] = 0;
   out_2639594576355650065[5] = 0;
   out_2639594576355650065[6] = 0;
   out_2639594576355650065[7] = 0;
   out_2639594576355650065[8] = 0;
   out_2639594576355650065[9] = 0;
   out_2639594576355650065[10] = 0;
   out_2639594576355650065[11] = 0;
   out_2639594576355650065[12] = 0;
   out_2639594576355650065[13] = 0;
   out_2639594576355650065[14] = 0;
   out_2639594576355650065[15] = 0;
   out_2639594576355650065[16] = 0;
   out_2639594576355650065[17] = 0;
   out_2639594576355650065[18] = 0;
   out_2639594576355650065[19] = 0;
   out_2639594576355650065[20] = 0;
   out_2639594576355650065[21] = 0;
   out_2639594576355650065[22] = 0;
   out_2639594576355650065[23] = 1;
   out_2639594576355650065[24] = 0;
   out_2639594576355650065[25] = 0;
   out_2639594576355650065[26] = 0;
   out_2639594576355650065[27] = 0;
   out_2639594576355650065[28] = 0;
   out_2639594576355650065[29] = 0;
   out_2639594576355650065[30] = 0;
   out_2639594576355650065[31] = 0;
   out_2639594576355650065[32] = 0;
   out_2639594576355650065[33] = 0;
   out_2639594576355650065[34] = 0;
   out_2639594576355650065[35] = 0;
   out_2639594576355650065[36] = 0;
   out_2639594576355650065[37] = 0;
   out_2639594576355650065[38] = 0;
   out_2639594576355650065[39] = 0;
   out_2639594576355650065[40] = 0;
   out_2639594576355650065[41] = 0;
   out_2639594576355650065[42] = 0;
   out_2639594576355650065[43] = 0;
   out_2639594576355650065[44] = 0;
   out_2639594576355650065[45] = 0;
   out_2639594576355650065[46] = 1;
   out_2639594576355650065[47] = 0;
   out_2639594576355650065[48] = 0;
   out_2639594576355650065[49] = 0;
   out_2639594576355650065[50] = 0;
   out_2639594576355650065[51] = 0;
   out_2639594576355650065[52] = 0;
   out_2639594576355650065[53] = 0;
   out_2639594576355650065[54] = 0;
   out_2639594576355650065[55] = 0;
   out_2639594576355650065[56] = 0;
   out_2639594576355650065[57] = 0;
   out_2639594576355650065[58] = 0;
   out_2639594576355650065[59] = 0;
   out_2639594576355650065[60] = 0;
   out_2639594576355650065[61] = 0;
   out_2639594576355650065[62] = 0;
   out_2639594576355650065[63] = 0;
   out_2639594576355650065[64] = 0;
   out_2639594576355650065[65] = 0;
}
void h_31(double *state, double *unused, double *out_105963961587279508) {
   out_105963961587279508[0] = state[7];
   out_105963961587279508[1] = state[8];
   out_105963961587279508[2] = state[9];
}
void H_31(double *state, double *unused, double *out_4292388927015004484) {
   out_4292388927015004484[0] = 0;
   out_4292388927015004484[1] = 0;
   out_4292388927015004484[2] = 0;
   out_4292388927015004484[3] = 0;
   out_4292388927015004484[4] = 0;
   out_4292388927015004484[5] = 0;
   out_4292388927015004484[6] = 0;
   out_4292388927015004484[7] = 1;
   out_4292388927015004484[8] = 0;
   out_4292388927015004484[9] = 0;
   out_4292388927015004484[10] = 0;
   out_4292388927015004484[11] = 0;
   out_4292388927015004484[12] = 0;
   out_4292388927015004484[13] = 0;
   out_4292388927015004484[14] = 0;
   out_4292388927015004484[15] = 0;
   out_4292388927015004484[16] = 0;
   out_4292388927015004484[17] = 0;
   out_4292388927015004484[18] = 0;
   out_4292388927015004484[19] = 0;
   out_4292388927015004484[20] = 0;
   out_4292388927015004484[21] = 0;
   out_4292388927015004484[22] = 0;
   out_4292388927015004484[23] = 0;
   out_4292388927015004484[24] = 0;
   out_4292388927015004484[25] = 0;
   out_4292388927015004484[26] = 0;
   out_4292388927015004484[27] = 0;
   out_4292388927015004484[28] = 0;
   out_4292388927015004484[29] = 0;
   out_4292388927015004484[30] = 1;
   out_4292388927015004484[31] = 0;
   out_4292388927015004484[32] = 0;
   out_4292388927015004484[33] = 0;
   out_4292388927015004484[34] = 0;
   out_4292388927015004484[35] = 0;
   out_4292388927015004484[36] = 0;
   out_4292388927015004484[37] = 0;
   out_4292388927015004484[38] = 0;
   out_4292388927015004484[39] = 0;
   out_4292388927015004484[40] = 0;
   out_4292388927015004484[41] = 0;
   out_4292388927015004484[42] = 0;
   out_4292388927015004484[43] = 0;
   out_4292388927015004484[44] = 0;
   out_4292388927015004484[45] = 0;
   out_4292388927015004484[46] = 0;
   out_4292388927015004484[47] = 0;
   out_4292388927015004484[48] = 0;
   out_4292388927015004484[49] = 0;
   out_4292388927015004484[50] = 0;
   out_4292388927015004484[51] = 0;
   out_4292388927015004484[52] = 0;
   out_4292388927015004484[53] = 1;
   out_4292388927015004484[54] = 0;
   out_4292388927015004484[55] = 0;
   out_4292388927015004484[56] = 0;
   out_4292388927015004484[57] = 0;
   out_4292388927015004484[58] = 0;
   out_4292388927015004484[59] = 0;
   out_4292388927015004484[60] = 0;
   out_4292388927015004484[61] = 0;
   out_4292388927015004484[62] = 0;
   out_4292388927015004484[63] = 0;
   out_4292388927015004484[64] = 0;
   out_4292388927015004484[65] = 0;
}
void h_32(double *state, double *unused, double *out_5633413682939672987) {
   out_5633413682939672987[0] = state[3];
   out_5633413682939672987[1] = state[4];
   out_5633413682939672987[2] = state[5];
   out_5633413682939672987[3] = state[6];
}
void H_32(double *state, double *unused, double *out_7178870349863458980) {
   out_7178870349863458980[0] = 0;
   out_7178870349863458980[1] = 0;
   out_7178870349863458980[2] = 0;
   out_7178870349863458980[3] = 1;
   out_7178870349863458980[4] = 0;
   out_7178870349863458980[5] = 0;
   out_7178870349863458980[6] = 0;
   out_7178870349863458980[7] = 0;
   out_7178870349863458980[8] = 0;
   out_7178870349863458980[9] = 0;
   out_7178870349863458980[10] = 0;
   out_7178870349863458980[11] = 0;
   out_7178870349863458980[12] = 0;
   out_7178870349863458980[13] = 0;
   out_7178870349863458980[14] = 0;
   out_7178870349863458980[15] = 0;
   out_7178870349863458980[16] = 0;
   out_7178870349863458980[17] = 0;
   out_7178870349863458980[18] = 0;
   out_7178870349863458980[19] = 0;
   out_7178870349863458980[20] = 0;
   out_7178870349863458980[21] = 0;
   out_7178870349863458980[22] = 0;
   out_7178870349863458980[23] = 0;
   out_7178870349863458980[24] = 0;
   out_7178870349863458980[25] = 0;
   out_7178870349863458980[26] = 1;
   out_7178870349863458980[27] = 0;
   out_7178870349863458980[28] = 0;
   out_7178870349863458980[29] = 0;
   out_7178870349863458980[30] = 0;
   out_7178870349863458980[31] = 0;
   out_7178870349863458980[32] = 0;
   out_7178870349863458980[33] = 0;
   out_7178870349863458980[34] = 0;
   out_7178870349863458980[35] = 0;
   out_7178870349863458980[36] = 0;
   out_7178870349863458980[37] = 0;
   out_7178870349863458980[38] = 0;
   out_7178870349863458980[39] = 0;
   out_7178870349863458980[40] = 0;
   out_7178870349863458980[41] = 0;
   out_7178870349863458980[42] = 0;
   out_7178870349863458980[43] = 0;
   out_7178870349863458980[44] = 0;
   out_7178870349863458980[45] = 0;
   out_7178870349863458980[46] = 0;
   out_7178870349863458980[47] = 0;
   out_7178870349863458980[48] = 0;
   out_7178870349863458980[49] = 1;
   out_7178870349863458980[50] = 0;
   out_7178870349863458980[51] = 0;
   out_7178870349863458980[52] = 0;
   out_7178870349863458980[53] = 0;
   out_7178870349863458980[54] = 0;
   out_7178870349863458980[55] = 0;
   out_7178870349863458980[56] = 0;
   out_7178870349863458980[57] = 0;
   out_7178870349863458980[58] = 0;
   out_7178870349863458980[59] = 0;
   out_7178870349863458980[60] = 0;
   out_7178870349863458980[61] = 0;
   out_7178870349863458980[62] = 0;
   out_7178870349863458980[63] = 0;
   out_7178870349863458980[64] = 0;
   out_7178870349863458980[65] = 0;
   out_7178870349863458980[66] = 0;
   out_7178870349863458980[67] = 0;
   out_7178870349863458980[68] = 0;
   out_7178870349863458980[69] = 0;
   out_7178870349863458980[70] = 0;
   out_7178870349863458980[71] = 0;
   out_7178870349863458980[72] = 1;
   out_7178870349863458980[73] = 0;
   out_7178870349863458980[74] = 0;
   out_7178870349863458980[75] = 0;
   out_7178870349863458980[76] = 0;
   out_7178870349863458980[77] = 0;
   out_7178870349863458980[78] = 0;
   out_7178870349863458980[79] = 0;
   out_7178870349863458980[80] = 0;
   out_7178870349863458980[81] = 0;
   out_7178870349863458980[82] = 0;
   out_7178870349863458980[83] = 0;
   out_7178870349863458980[84] = 0;
   out_7178870349863458980[85] = 0;
   out_7178870349863458980[86] = 0;
   out_7178870349863458980[87] = 0;
}
void h_13(double *state, double *unused, double *out_102321889000685665) {
   out_102321889000685665[0] = (-2*state[3]*state[5] + 2*state[4]*state[6])*state[9] + (2*state[3]*state[6] + 2*state[4]*state[5])*state[8] + (pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2))*state[7];
   out_102321889000685665[1] = (2*state[3]*state[4] + 2*state[5]*state[6])*state[9] + (-2*state[3]*state[6] + 2*state[4]*state[5])*state[7] + (pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2))*state[8];
   out_102321889000685665[2] = (-2*state[3]*state[4] + 2*state[5]*state[6])*state[8] + (2*state[3]*state[5] + 2*state[4]*state[6])*state[7] + (pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2))*state[9];
}
void H_13(double *state, double *unused, double *out_2030752425708420177) {
   out_2030752425708420177[0] = 0;
   out_2030752425708420177[1] = 0;
   out_2030752425708420177[2] = 0;
   out_2030752425708420177[3] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_2030752425708420177[4] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2030752425708420177[5] = -2*state[3]*state[9] + 2*state[4]*state[8] - 2*state[5]*state[7];
   out_2030752425708420177[6] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_2030752425708420177[7] = pow(state[3], 2) + pow(state[4], 2) - pow(state[5], 2) - pow(state[6], 2);
   out_2030752425708420177[8] = 2*state[3]*state[6] + 2*state[4]*state[5];
   out_2030752425708420177[9] = -2*state[3]*state[5] + 2*state[4]*state[6];
   out_2030752425708420177[10] = 0;
   out_2030752425708420177[11] = 0;
   out_2030752425708420177[12] = 0;
   out_2030752425708420177[13] = 0;
   out_2030752425708420177[14] = 0;
   out_2030752425708420177[15] = 0;
   out_2030752425708420177[16] = 0;
   out_2030752425708420177[17] = 0;
   out_2030752425708420177[18] = 0;
   out_2030752425708420177[19] = 0;
   out_2030752425708420177[20] = 0;
   out_2030752425708420177[21] = 0;
   out_2030752425708420177[22] = 0;
   out_2030752425708420177[23] = 0;
   out_2030752425708420177[24] = 0;
   out_2030752425708420177[25] = 2*state[3]*state[8] + 2*state[4]*state[9] - 2*state[6]*state[7];
   out_2030752425708420177[26] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_2030752425708420177[27] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2030752425708420177[28] = -2*state[3]*state[7] + 2*state[5]*state[9] - 2*state[6]*state[8];
   out_2030752425708420177[29] = -2*state[3]*state[6] + 2*state[4]*state[5];
   out_2030752425708420177[30] = pow(state[3], 2) - pow(state[4], 2) + pow(state[5], 2) - pow(state[6], 2);
   out_2030752425708420177[31] = 2*state[3]*state[4] + 2*state[5]*state[6];
   out_2030752425708420177[32] = 0;
   out_2030752425708420177[33] = 0;
   out_2030752425708420177[34] = 0;
   out_2030752425708420177[35] = 0;
   out_2030752425708420177[36] = 0;
   out_2030752425708420177[37] = 0;
   out_2030752425708420177[38] = 0;
   out_2030752425708420177[39] = 0;
   out_2030752425708420177[40] = 0;
   out_2030752425708420177[41] = 0;
   out_2030752425708420177[42] = 0;
   out_2030752425708420177[43] = 0;
   out_2030752425708420177[44] = 0;
   out_2030752425708420177[45] = 0;
   out_2030752425708420177[46] = 0;
   out_2030752425708420177[47] = 2*state[3]*state[9] - 2*state[4]*state[8] + 2*state[5]*state[7];
   out_2030752425708420177[48] = -2*state[3]*state[8] - 2*state[4]*state[9] + 2*state[6]*state[7];
   out_2030752425708420177[49] = 2*state[3]*state[7] - 2*state[5]*state[9] + 2*state[6]*state[8];
   out_2030752425708420177[50] = 2*state[4]*state[7] + 2*state[5]*state[8] + 2*state[6]*state[9];
   out_2030752425708420177[51] = 2*state[3]*state[5] + 2*state[4]*state[6];
   out_2030752425708420177[52] = -2*state[3]*state[4] + 2*state[5]*state[6];
   out_2030752425708420177[53] = pow(state[3], 2) - pow(state[4], 2) - pow(state[5], 2) + pow(state[6], 2);
   out_2030752425708420177[54] = 0;
   out_2030752425708420177[55] = 0;
   out_2030752425708420177[56] = 0;
   out_2030752425708420177[57] = 0;
   out_2030752425708420177[58] = 0;
   out_2030752425708420177[59] = 0;
   out_2030752425708420177[60] = 0;
   out_2030752425708420177[61] = 0;
   out_2030752425708420177[62] = 0;
   out_2030752425708420177[63] = 0;
   out_2030752425708420177[64] = 0;
   out_2030752425708420177[65] = 0;
}
void h_14(double *state, double *unused, double *out_1671602116294396863) {
   out_1671602116294396863[0] = state[10];
   out_1671602116294396863[1] = state[11];
   out_1671602116294396863[2] = state[12];
}
void H_14(double *state, double *unused, double *out_371832049123164390) {
   out_371832049123164390[0] = 0;
   out_371832049123164390[1] = 0;
   out_371832049123164390[2] = 0;
   out_371832049123164390[3] = 0;
   out_371832049123164390[4] = 0;
   out_371832049123164390[5] = 0;
   out_371832049123164390[6] = 0;
   out_371832049123164390[7] = 0;
   out_371832049123164390[8] = 0;
   out_371832049123164390[9] = 0;
   out_371832049123164390[10] = 1;
   out_371832049123164390[11] = 0;
   out_371832049123164390[12] = 0;
   out_371832049123164390[13] = 0;
   out_371832049123164390[14] = 0;
   out_371832049123164390[15] = 0;
   out_371832049123164390[16] = 0;
   out_371832049123164390[17] = 0;
   out_371832049123164390[18] = 0;
   out_371832049123164390[19] = 0;
   out_371832049123164390[20] = 0;
   out_371832049123164390[21] = 0;
   out_371832049123164390[22] = 0;
   out_371832049123164390[23] = 0;
   out_371832049123164390[24] = 0;
   out_371832049123164390[25] = 0;
   out_371832049123164390[26] = 0;
   out_371832049123164390[27] = 0;
   out_371832049123164390[28] = 0;
   out_371832049123164390[29] = 0;
   out_371832049123164390[30] = 0;
   out_371832049123164390[31] = 0;
   out_371832049123164390[32] = 0;
   out_371832049123164390[33] = 1;
   out_371832049123164390[34] = 0;
   out_371832049123164390[35] = 0;
   out_371832049123164390[36] = 0;
   out_371832049123164390[37] = 0;
   out_371832049123164390[38] = 0;
   out_371832049123164390[39] = 0;
   out_371832049123164390[40] = 0;
   out_371832049123164390[41] = 0;
   out_371832049123164390[42] = 0;
   out_371832049123164390[43] = 0;
   out_371832049123164390[44] = 0;
   out_371832049123164390[45] = 0;
   out_371832049123164390[46] = 0;
   out_371832049123164390[47] = 0;
   out_371832049123164390[48] = 0;
   out_371832049123164390[49] = 0;
   out_371832049123164390[50] = 0;
   out_371832049123164390[51] = 0;
   out_371832049123164390[52] = 0;
   out_371832049123164390[53] = 0;
   out_371832049123164390[54] = 0;
   out_371832049123164390[55] = 0;
   out_371832049123164390[56] = 1;
   out_371832049123164390[57] = 0;
   out_371832049123164390[58] = 0;
   out_371832049123164390[59] = 0;
   out_371832049123164390[60] = 0;
   out_371832049123164390[61] = 0;
   out_371832049123164390[62] = 0;
   out_371832049123164390[63] = 0;
   out_371832049123164390[64] = 0;
   out_371832049123164390[65] = 0;
}
void h_33(double *state, double *unused, double *out_1238518388196214819) {
   out_1238518388196214819[0] = state[16];
   out_1238518388196214819[1] = state[17];
   out_1238518388196214819[2] = state[18];
}
void H_33(double *state, double *unused, double *out_1141831922376146880) {
   out_1141831922376146880[0] = 0;
   out_1141831922376146880[1] = 0;
   out_1141831922376146880[2] = 0;
   out_1141831922376146880[3] = 0;
   out_1141831922376146880[4] = 0;
   out_1141831922376146880[5] = 0;
   out_1141831922376146880[6] = 0;
   out_1141831922376146880[7] = 0;
   out_1141831922376146880[8] = 0;
   out_1141831922376146880[9] = 0;
   out_1141831922376146880[10] = 0;
   out_1141831922376146880[11] = 0;
   out_1141831922376146880[12] = 0;
   out_1141831922376146880[13] = 0;
   out_1141831922376146880[14] = 0;
   out_1141831922376146880[15] = 0;
   out_1141831922376146880[16] = 1;
   out_1141831922376146880[17] = 0;
   out_1141831922376146880[18] = 0;
   out_1141831922376146880[19] = 0;
   out_1141831922376146880[20] = 0;
   out_1141831922376146880[21] = 0;
   out_1141831922376146880[22] = 0;
   out_1141831922376146880[23] = 0;
   out_1141831922376146880[24] = 0;
   out_1141831922376146880[25] = 0;
   out_1141831922376146880[26] = 0;
   out_1141831922376146880[27] = 0;
   out_1141831922376146880[28] = 0;
   out_1141831922376146880[29] = 0;
   out_1141831922376146880[30] = 0;
   out_1141831922376146880[31] = 0;
   out_1141831922376146880[32] = 0;
   out_1141831922376146880[33] = 0;
   out_1141831922376146880[34] = 0;
   out_1141831922376146880[35] = 0;
   out_1141831922376146880[36] = 0;
   out_1141831922376146880[37] = 0;
   out_1141831922376146880[38] = 0;
   out_1141831922376146880[39] = 1;
   out_1141831922376146880[40] = 0;
   out_1141831922376146880[41] = 0;
   out_1141831922376146880[42] = 0;
   out_1141831922376146880[43] = 0;
   out_1141831922376146880[44] = 0;
   out_1141831922376146880[45] = 0;
   out_1141831922376146880[46] = 0;
   out_1141831922376146880[47] = 0;
   out_1141831922376146880[48] = 0;
   out_1141831922376146880[49] = 0;
   out_1141831922376146880[50] = 0;
   out_1141831922376146880[51] = 0;
   out_1141831922376146880[52] = 0;
   out_1141831922376146880[53] = 0;
   out_1141831922376146880[54] = 0;
   out_1141831922376146880[55] = 0;
   out_1141831922376146880[56] = 0;
   out_1141831922376146880[57] = 0;
   out_1141831922376146880[58] = 0;
   out_1141831922376146880[59] = 0;
   out_1141831922376146880[60] = 0;
   out_1141831922376146880[61] = 0;
   out_1141831922376146880[62] = 1;
   out_1141831922376146880[63] = 0;
   out_1141831922376146880[64] = 0;
   out_1141831922376146880[65] = 0;
}
#include <eigen3/Eigen/Dense>
#include <iostream>

typedef Eigen::Matrix<double, DIM, DIM, Eigen::RowMajor> DDM;
typedef Eigen::Matrix<double, EDIM, EDIM, Eigen::RowMajor> EEM;
typedef Eigen::Matrix<double, DIM, EDIM, Eigen::RowMajor> DEM;

void predict(double *in_x, double *in_P, double *in_Q, double dt) {
  typedef Eigen::Matrix<double, MEDIM, MEDIM, Eigen::RowMajor> RRM;

  double nx[DIM] = {0};
  double in_F[EDIM*EDIM] = {0};

  // functions from sympy
  f_fun(in_x, dt, nx);
  F_fun(in_x, dt, in_F);


  EEM F(in_F);
  EEM P(in_P);
  EEM Q(in_Q);

  RRM F_main = F.topLeftCorner(MEDIM, MEDIM);
  P.topLeftCorner(MEDIM, MEDIM) = (F_main * P.topLeftCorner(MEDIM, MEDIM)) * F_main.transpose();
  P.topRightCorner(MEDIM, EDIM - MEDIM) = F_main * P.topRightCorner(MEDIM, EDIM - MEDIM);
  P.bottomLeftCorner(EDIM - MEDIM, MEDIM) = P.bottomLeftCorner(EDIM - MEDIM, MEDIM) * F_main.transpose();

  P = P + dt*Q;

  // copy out state
  memcpy(in_x, nx, DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
}

// note: extra_args dim only correct when null space projecting
// otherwise 1
template <int ZDIM, int EADIM, bool MAHA_TEST>
void update(double *in_x, double *in_P, Hfun h_fun, Hfun H_fun, Hfun Hea_fun, double *in_z, double *in_R, double *in_ea, double MAHA_THRESHOLD) {
  typedef Eigen::Matrix<double, ZDIM, ZDIM, Eigen::RowMajor> ZZM;
  typedef Eigen::Matrix<double, ZDIM, DIM, Eigen::RowMajor> ZDM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, EDIM, Eigen::RowMajor> XEM;
  //typedef Eigen::Matrix<double, EDIM, ZDIM, Eigen::RowMajor> EZM;
  typedef Eigen::Matrix<double, Eigen::Dynamic, 1> X1M;
  typedef Eigen::Matrix<double, Eigen::Dynamic, Eigen::Dynamic, Eigen::RowMajor> XXM;

  double in_hx[ZDIM] = {0};
  double in_H[ZDIM * DIM] = {0};
  double in_H_mod[EDIM * DIM] = {0};
  double delta_x[EDIM] = {0};
  double x_new[DIM] = {0};


  // state x, P
  Eigen::Matrix<double, ZDIM, 1> z(in_z);
  EEM P(in_P);
  ZZM pre_R(in_R);

  // functions from sympy
  h_fun(in_x, in_ea, in_hx);
  H_fun(in_x, in_ea, in_H);
  ZDM pre_H(in_H);

  // get y (y = z - hx)
  Eigen::Matrix<double, ZDIM, 1> pre_y(in_hx); pre_y = z - pre_y;
  X1M y; XXM H; XXM R;
  if (Hea_fun){
    typedef Eigen::Matrix<double, ZDIM, EADIM, Eigen::RowMajor> ZAM;
    double in_Hea[ZDIM * EADIM] = {0};
    Hea_fun(in_x, in_ea, in_Hea);
    ZAM Hea(in_Hea);
    XXM A = Hea.transpose().fullPivLu().kernel();


    y = A.transpose() * pre_y;
    H = A.transpose() * pre_H;
    R = A.transpose() * pre_R * A;
  } else {
    y = pre_y;
    H = pre_H;
    R = pre_R;
  }
  // get modified H
  H_mod_fun(in_x, in_H_mod);
  DEM H_mod(in_H_mod);
  XEM H_err = H * H_mod;

  // Do mahalobis distance test
  if (MAHA_TEST){
    XXM a = (H_err * P * H_err.transpose() + R).inverse();
    double maha_dist = y.transpose() * a * y;
    if (maha_dist > MAHA_THRESHOLD){
      R = 1.0e16 * R;
    }
  }

  // Outlier resilient weighting
  double weight = 1;//(1.5)/(1 + y.squaredNorm()/R.sum());

  // kalman gains and I_KH
  XXM S = ((H_err * P) * H_err.transpose()) + R/weight;
  XEM KT = S.fullPivLu().solve(H_err * P.transpose());
  //EZM K = KT.transpose(); TODO: WHY DOES THIS NOT COMPILE?
  //EZM K = S.fullPivLu().solve(H_err * P.transpose()).transpose();
  //std::cout << "Here is the matrix rot:\n" << K << std::endl;
  EEM I_KH = Eigen::Matrix<double, EDIM, EDIM>::Identity() - (KT.transpose() * H_err);

  // update state by injecting dx
  Eigen::Matrix<double, EDIM, 1> dx(delta_x);
  dx  = (KT.transpose() * y);
  memcpy(delta_x, dx.data(), EDIM * sizeof(double));
  err_fun(in_x, delta_x, x_new);
  Eigen::Matrix<double, DIM, 1> x(x_new);

  // update cov
  P = ((I_KH * P) * I_KH.transpose()) + ((KT.transpose() * R) * KT);

  // copy out state
  memcpy(in_x, x.data(), DIM * sizeof(double));
  memcpy(in_P, P.data(), EDIM * EDIM * sizeof(double));
  memcpy(in_z, y.data(), y.rows() * sizeof(double));
}




}
extern "C" {

void live_update_4(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_4, H_4, NULL, in_z, in_R, in_ea, MAHA_THRESH_4);
}
void live_update_9(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_9, H_9, NULL, in_z, in_R, in_ea, MAHA_THRESH_9);
}
void live_update_10(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_10, H_10, NULL, in_z, in_R, in_ea, MAHA_THRESH_10);
}
void live_update_12(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_12, H_12, NULL, in_z, in_R, in_ea, MAHA_THRESH_12);
}
void live_update_31(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_31, H_31, NULL, in_z, in_R, in_ea, MAHA_THRESH_31);
}
void live_update_32(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<4, 3, 0>(in_x, in_P, h_32, H_32, NULL, in_z, in_R, in_ea, MAHA_THRESH_32);
}
void live_update_13(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_13, H_13, NULL, in_z, in_R, in_ea, MAHA_THRESH_13);
}
void live_update_14(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_14, H_14, NULL, in_z, in_R, in_ea, MAHA_THRESH_14);
}
void live_update_33(double *in_x, double *in_P, double *in_z, double *in_R, double *in_ea) {
  update<3, 3, 0>(in_x, in_P, h_33, H_33, NULL, in_z, in_R, in_ea, MAHA_THRESH_33);
}
void live_H(double *in_vec, double *out_2337975499004216015) {
  H(in_vec, out_2337975499004216015);
}
void live_err_fun(double *nom_x, double *delta_x, double *out_7211975948903307689) {
  err_fun(nom_x, delta_x, out_7211975948903307689);
}
void live_inv_err_fun(double *nom_x, double *true_x, double *out_1869955993172153366) {
  inv_err_fun(nom_x, true_x, out_1869955993172153366);
}
void live_H_mod_fun(double *state, double *out_7005854625022851394) {
  H_mod_fun(state, out_7005854625022851394);
}
void live_f_fun(double *state, double dt, double *out_5267891945337088690) {
  f_fun(state,  dt, out_5267891945337088690);
}
void live_F_fun(double *state, double dt, double *out_2581783222534495222) {
  F_fun(state,  dt, out_2581783222534495222);
}
void live_h_4(double *state, double *unused, double *out_6899066197363664588) {
  h_4(state, unused, out_6899066197363664588);
}
void live_H_4(double *state, double *unused, double *out_7659050984387611860) {
  H_4(state, unused, out_7659050984387611860);
}
void live_h_9(double *state, double *unused, double *out_1671602116294396863) {
  h_9(state, unused, out_1671602116294396863);
}
void live_H_9(double *state, double *unused, double *out_371832049123164390) {
  H_9(state, unused, out_371832049123164390);
}
void live_h_10(double *state, double *unused, double *out_119849606827224068) {
  h_10(state, unused, out_119849606827224068);
}
void live_H_10(double *state, double *unused, double *out_8976141317441350647) {
  H_10(state, unused, out_8976141317441350647);
}
void live_h_12(double *state, double *unused, double *out_6955664201105629571) {
  h_12(state, unused, out_6955664201105629571);
}
void live_H_12(double *state, double *unused, double *out_2639594576355650065) {
  H_12(state, unused, out_2639594576355650065);
}
void live_h_31(double *state, double *unused, double *out_105963961587279508) {
  h_31(state, unused, out_105963961587279508);
}
void live_H_31(double *state, double *unused, double *out_4292388927015004484) {
  H_31(state, unused, out_4292388927015004484);
}
void live_h_32(double *state, double *unused, double *out_5633413682939672987) {
  h_32(state, unused, out_5633413682939672987);
}
void live_H_32(double *state, double *unused, double *out_7178870349863458980) {
  H_32(state, unused, out_7178870349863458980);
}
void live_h_13(double *state, double *unused, double *out_102321889000685665) {
  h_13(state, unused, out_102321889000685665);
}
void live_H_13(double *state, double *unused, double *out_2030752425708420177) {
  H_13(state, unused, out_2030752425708420177);
}
void live_h_14(double *state, double *unused, double *out_1671602116294396863) {
  h_14(state, unused, out_1671602116294396863);
}
void live_H_14(double *state, double *unused, double *out_371832049123164390) {
  H_14(state, unused, out_371832049123164390);
}
void live_h_33(double *state, double *unused, double *out_1238518388196214819) {
  h_33(state, unused, out_1238518388196214819);
}
void live_H_33(double *state, double *unused, double *out_1141831922376146880) {
  H_33(state, unused, out_1141831922376146880);
}
void live_predict(double *in_x, double *in_P, double *in_Q, double dt) {
  predict(in_x, in_P, in_Q, dt);
}
}

const EKF live = {
  .name = "live",
  .kinds = { 4, 9, 10, 12, 31, 32, 13, 14, 33 },
  .feature_kinds = {  },
  .f_fun = live_f_fun,
  .F_fun = live_F_fun,
  .err_fun = live_err_fun,
  .inv_err_fun = live_inv_err_fun,
  .H_mod_fun = live_H_mod_fun,
  .predict = live_predict,
  .hs = {
    { 4, live_h_4 },
    { 9, live_h_9 },
    { 10, live_h_10 },
    { 12, live_h_12 },
    { 31, live_h_31 },
    { 32, live_h_32 },
    { 13, live_h_13 },
    { 14, live_h_14 },
    { 33, live_h_33 },
  },
  .Hs = {
    { 4, live_H_4 },
    { 9, live_H_9 },
    { 10, live_H_10 },
    { 12, live_H_12 },
    { 31, live_H_31 },
    { 32, live_H_32 },
    { 13, live_H_13 },
    { 14, live_H_14 },
    { 33, live_H_33 },
  },
  .updates = {
    { 4, live_update_4 },
    { 9, live_update_9 },
    { 10, live_update_10 },
    { 12, live_update_12 },
    { 31, live_update_31 },
    { 32, live_update_32 },
    { 13, live_update_13 },
    { 14, live_update_14 },
    { 33, live_update_33 },
  },
  .Hes = {
  },
  .sets = {
  },
  .extra_routines = {
    { "H", live_H },
  },
};

ekf_init(live);
